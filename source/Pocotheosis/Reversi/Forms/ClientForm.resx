<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pocoReader.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAQAAEABAAoAQAANgAAACAgEAABAAQA6AIAAF4BAAAwMBAAAQAEAGgGAABGBAAAKAAAABAA
        AAAgAAAAAQAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAKHBMATU1NADGDNwBKxk8Ah9mBAOT2
        0AD//+YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiIiIiiIiIiCQxE0KIiIiIIwAAMoiI
        iIghAAASiIiIiCEAABKIiIiIIwAAMoiIiIgkMRNCiIiIiCIiIiKIiIiIIiIiIiIiIiIkVmVCJDETQiV3
        d1IjAAAyJnd3YiEAABImd3diIQAAEiV3d1IjAAAyJFZlQiQxE0IiIiIiIiIiIgD/AAAA/wAAAP8AAAD/
        AAAA/wAAAP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAIAAAAEAA
        AAABAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAMDQACDQ4AGUEfAEtOTAAyjjQAOqdAAEvD
        SwBOxk8ARsZSAGXOZwB71nwAw+u2APH82gD+/+kAAAAAAERERERERERE//////////9IiIUyI1iJhP//
        ////////SIYgAAACaIT//////////0hgAAAAAAaE//////////9IIAAAAAAChP//////////RQAAAAAA
        AFT//////////0MAAAAAAAA0//////////9CAAAAAAAABP//////////QAAAAAAAAAT//////////0MA
        AAAAAAA0//////////9FAAAAAAAAVP//////////SCAAAAAAAoT//////////0hgAAAAAAaE////////
        //9IhgAAAABohP//////////SIiFMANYiIT//////////0RERERERERE//////////9ERERERERERERE
        RERERERESYiLzdy3eIRIiIUyI1iJhEh63u7u7amESIYgAAACaIRHru7t7u7qhEhgAAAAAAaER97u7u7u
        7aRIIAAAAAAChEvu7e3u7u60RQAAAAAAAFRM7u7u7u7uxEMAAAAAAAA0Tu3t7u7u7tRAAAAAAAAABE3u
        7u7u7u7kQgAAAAAAAARM7u7u7u7uxEMAAAAAAAA0S+7u7u7u7rRFAAAAAAAAVEje7u7u7u6ESAAAAAAA
        AYRJrt7u7u7qhEhgAAAAAAaESJru7u7tqIRIlgAAAAFohEiIi87suIiESIiFMANYiIRERERERERERERE
        REREREREAAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAoAAAAMAAAAGAAAAABAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAMJ
        DAARLhkATU1NAChrLwAxhDcAP6pFAErGTwBizWMAhdiAAJzfkwDU8cIA9vzeAP//5gAAAAAAAAAAADMz
        MzMzMzMzMzMzM+7u7u7u7u7u7u7u7jd3d3d3d3d3d3d3c+7u7u7u7u7u7u7u7jd3d3dkIRJGd3d3c+7u
        7u7u7u7u7u7u7jd3d2IAAAAAJnd3c+7u7u7u7u7u7u7u7jd3dQAAAAAAAFd3c+7u7u7u7u7u7u7u7jd3
        UAAAAAAAAAV3c+7u7u7u7u7u7u7u7jd2AAAAAAAAAABnc+7u7u7u7u7u7u7u7jdyAAAAAAAAAAAnc+7u
        7u7u7u7u7u7u7jdgAAAAAAAAAAAGc+7u7u7u7u7u7u7u7jdAAAAAAAAAAAAEc+7u7u7u7u7u7u7u7jcg
        AAAAAAAAAAACc+7u7u7u7u7u7u7u7jcQAAAAAAAAAAABc+7u7u7u7u7u7u7u7jcQAAAAAAAAAAABc+7u
        7u7u7u7u7u7u7jcgAAAAAAAAAAACc+7u7u7u7u7u7u7u7jdAAAAAAAAAAAAEc+7u7u7u7u7u7u7u7jdg
        AAAAAAAAAAAGc+7u7u7u7u7u7u7u7jdyAAAAAAAAAAAnc+7u7u7u7u7u7u7u7jd2AAAAAAAAAABnc+7u
        7u7u7u7u7u7u7jd3UAAAAAAAAAV3c+7u7u7u7u7u7u7u7jd3dQAAAAAAAFd3c+7u7u7u7u7u7u7u7jd3
        d2IAAAAAJnd3c+7u7u7u7u7u7u7u7jd3d3dkIRJGd3d3c+7u7u7u7u7u7u7u7jd3d3d3d3d3d3d3c+7u
        7u7u7u7u7u7u7jMzMzMzMzMzMzMzM+7u7u7u7u7u7u7u7jMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzd3
        d3d3d3d3d3d3czd3d3d3d3d3d3d3czd3d3eKvMuod3d3czd3d3dkIRJGd3d3czd3d4vd3d3duHd3czd3
        d2IAAAAAJnd3czd3ed3d3d3d3Zd3czd3dQAAAAAAAFd3czd3nd3d3d3d3dl3czd3UAAAAAAAAAV3czd4
        3d3d3d3d3d2Hczd2AAAAAAAAAABnczd73d3d3d3d3d23czdyAAAAAAAAAAAnczeN3d3d3d3d3d3Yczdg
        AAAAAAAAAAAGczet3d3d3d3d3d3aczdAAAAAAAAAAAAEcze93d3d3d3d3d3bczcgAAAAAAAAAAACczfN
        3d3d3d3d3d3cczcQAAAAAAAAAAABczfN3d3d3d3d3d3cczcQAAAAAAAAAAABcze93d3d3d3d3d3bczcg
        AAAAAAAAAAACczet3d3d3d3d3d3aczdAAAAAAAAAAAAEczeN3d3d3d3d3d3YczdgAAAAAAAAAAAGczd7
        3d3d3d3d3d23czdyAAAAAAAAAAAnczd43d3d3d3d3d2Hczd2AAAAAAAAAABnczd3nd3d3d3d3dl3czd3
        UAAAAAAAAAV3czd3ed3d3d3d3Zd3czd3dQAAAAAAAFd3czd3d4vd3d3duHd3czd3d2IAAAAAJnd3czd3
        d3eKvMuod3d3czd3d3dkIRJGd3d3czd3d3d3d3d3d3d3czd3d3d3d3d3d3d3czMzMzMzMzMzMzMzMzMz
        MzMzMzMzMzMzMwAAAP///wAAAAAA////AAAAAAD///8AAAAAAP///wAAAAAA////AAAAAAD///8AAAAA
        AP///wAAAAAA////AAAAAAD///8AAAAAAP///wAAAAAA////AAAAAAD///8AAAAAAP///wAAAAAA////
        AAAAAAD///8AAAAAAP///wAAAAAA////AAAAAAD///8AAAAAAP///wAAAAAA////AAAAAAD///8AAAAA
        AP///wAAAAAA////AAAAAAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>