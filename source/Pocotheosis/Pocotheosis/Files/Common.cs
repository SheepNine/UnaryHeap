using System.Collections.Generic;
using System.IO;

namespace Pocotheosis
{
    static partial class Generator
    {
        static bool OutputUpToDate(PocoNamespace ns, string filename)
        {
            var info = new FileInfo(filename);
            return info.Exists && info.LastWriteTimeUtc >= ns.LastWriteTimeUtc;
        }

        static void WriteNamespaceHeader(PocoNamespace ns, TextWriter output, string[] shortForms)
        {
            var version = typeof(Program).Assembly.GetName().Version;
            var shortFormRegistry = new Dictionary<string, string>()
            {
                { "_nsS_", "global::System" },
                { "_nsC_", "global::System.Collections"},
                { "_nsG_", "global::System.Collections.Generic"},
                { "_nsL_", "global::System.Linq"},
                { "_nsI_", "global::System.IO"},
                { "_nsT_", "global::System.Text"},
                { "_nsCC_", "global::System.Collections.Concurrent"},
                { "_nsGl_", "global::System.Globalization"},
           };

            output.EmitCode(
$"// ================================================================================",
$"// This file was automatically generated by Pocotheosis version {version}.",
$"// DO NOT EDIT THIS FILE DIRECTLY! Edit the manifest file and regenerate it instead",
$"// ================================================================================",
$""
            );
            foreach (var shortForm in shortForms)
                output.WriteLine($"using {shortForm} = {shortFormRegistry[shortForm]};");
            output.EmitCode(
$"",
$"namespace {ns.Name}",
$"{{"
            );
        }

        static void WriteNamespaceFooter(TextWriter output)
        {
            output.WriteLine("}");
        }
    }
}
